/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.web.model.jooq.generated.tables;


import edu.uci.ics.texera.web.model.jooq.generated.Keys;
import edu.uci.ics.texera.web.model.jooq.generated.TexeraDb;
import edu.uci.ics.texera.web.model.jooq.generated.tables.records.UserDictionaryRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.JSON;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.SQLDataType;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UserDictionary extends TableImpl<UserDictionaryRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>texera_db.user_dictionary</code>
     */
    public static final UserDictionary USER_DICTIONARY = new UserDictionary();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserDictionaryRecord> getRecordType() {
        return UserDictionaryRecord.class;
    }

    /**
     * The column <code>texera_db.user_dictionary.uid</code>.
     */
    public final TableField<UserDictionaryRecord, UInteger> UID = createField(DSL.name("uid"), SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

    /**
     * The column <code>texera_db.user_dictionary.key</code>.
     */
    public final TableField<UserDictionaryRecord, String> KEY = createField(DSL.name("key"), SQLDataType.VARCHAR(128).nullable(false), this, "");

    /**
     * The column <code>texera_db.user_dictionary.value</code>.
     */
    public final TableField<UserDictionaryRecord, JSON> VALUE = createField(DSL.name("value"), SQLDataType.JSON.nullable(false), this, "");

    private UserDictionary(Name alias, Table<UserDictionaryRecord> aliased) {
        this(alias, aliased, null);
    }

    private UserDictionary(Name alias, Table<UserDictionaryRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    /**
     * Create an aliased <code>texera_db.user_dictionary</code> table reference
     */
    public UserDictionary(String alias) {
        this(DSL.name(alias), USER_DICTIONARY);
    }

    /**
     * Create an aliased <code>texera_db.user_dictionary</code> table reference
     */
    public UserDictionary(Name alias) {
        this(alias, USER_DICTIONARY);
    }

    /**
     * Create a <code>texera_db.user_dictionary</code> table reference
     */
    public UserDictionary() {
        this(DSL.name("user_dictionary"), null);
    }

    public <O extends Record> UserDictionary(Table<O> child, ForeignKey<O, UserDictionaryRecord> key) {
        super(child, key, USER_DICTIONARY);
    }

    @Override
    public Schema getSchema() {
        return TexeraDb.TEXERA_DB;
    }

    @Override
    public UniqueKey<UserDictionaryRecord> getPrimaryKey() {
        return Keys.KEY_USER_DICTIONARY_PRIMARY;
    }

    @Override
    public List<UniqueKey<UserDictionaryRecord>> getKeys() {
        return Arrays.<UniqueKey<UserDictionaryRecord>>asList(Keys.KEY_USER_DICTIONARY_PRIMARY);
    }

    @Override
    public List<ForeignKey<UserDictionaryRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UserDictionaryRecord, ?>>asList(Keys.USER_DICTIONARY_IBFK_1);
    }

    public User user() {
        return new User(this, Keys.USER_DICTIONARY_IBFK_1);
    }

    @Override
    public UserDictionary as(String alias) {
        return new UserDictionary(DSL.name(alias), this);
    }

    @Override
    public UserDictionary as(Name alias) {
        return new UserDictionary(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UserDictionary rename(String name) {
        return new UserDictionary(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UserDictionary rename(Name name) {
        return new UserDictionary(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<UInteger, String, JSON> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
