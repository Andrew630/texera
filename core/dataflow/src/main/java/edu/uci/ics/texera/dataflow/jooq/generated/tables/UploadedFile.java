/*
 * This file is generated by jOOQ.
 */
package edu.uci.ics.texera.dataflow.jooq.generated.tables;


import edu.uci.ics.texera.dataflow.jooq.generated.Indexes;
import edu.uci.ics.texera.dataflow.jooq.generated.Keys;
import edu.uci.ics.texera.dataflow.jooq.generated.TexeraDb;
import edu.uci.ics.texera.dataflow.jooq.generated.tables.records.UploadedFileRecord;
import org.jooq.*;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;

import java.util.Arrays;
import java.util.List;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({"all", "unchecked", "rawtypes"})
public class UploadedFile extends TableImpl<UploadedFileRecord> {

    /**
     * The reference instance of <code>texera_db.uploaded_file</code>
     */
    public static final UploadedFile UPLOADED_FILE = new UploadedFile();
    private static final long serialVersionUID = -371856409;
    /**
     * The column <code>texera_db.uploaded_file.uid</code>.
     */
    public final TableField<UploadedFileRecord, UInteger> UID = createField(DSL.name("uid"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");
    /**
     * The column <code>texera_db.uploaded_file.fid</code>.
     */
    public final TableField<UploadedFileRecord, UInteger> FID = createField(DSL.name("fid"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false).identity(true), this, "");
    /**
     * The column <code>texera_db.uploaded_file.size</code>.
     */
    public final TableField<UploadedFileRecord, UInteger> SIZE = createField(DSL.name("size"), org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");
    /**
     * The column <code>texera_db.uploaded_file.name</code>.
     */
    public final TableField<UploadedFileRecord, String> NAME = createField(DSL.name("name"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), this, "");
    /**
     * The column <code>texera_db.uploaded_file.path</code>.
     */
    public final TableField<UploadedFileRecord, String> PATH = createField(DSL.name("path"), org.jooq.impl.SQLDataType.VARCHAR(512).nullable(false), this, "");
    /**
     * The column <code>texera_db.uploaded_file.description</code>.
     */
    public final TableField<UploadedFileRecord, String> DESCRIPTION = createField(DSL.name("description"), org.jooq.impl.SQLDataType.VARCHAR(512).nullable(false), this, "");

    /**
     * Create a <code>texera_db.uploaded_file</code> table reference
     */
    public UploadedFile() {
        this(DSL.name("uploaded_file"), null);
    }

    /**
     * Create an aliased <code>texera_db.uploaded_file</code> table reference
     */
    public UploadedFile(String alias) {
        this(DSL.name(alias), UPLOADED_FILE);
    }

    /**
     * Create an aliased <code>texera_db.uploaded_file</code> table reference
     */
    public UploadedFile(Name alias) {
        this(alias, UPLOADED_FILE);
    }

    private UploadedFile(Name alias, Table<UploadedFileRecord> aliased) {
        this(alias, aliased, null);
    }

    private UploadedFile(Name alias, Table<UploadedFileRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> UploadedFile(Table<O> child, ForeignKey<O, UploadedFileRecord> key) {
        super(child, key, UPLOADED_FILE);
    }

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UploadedFileRecord> getRecordType() {
        return UploadedFileRecord.class;
    }

    @Override
    public Schema getSchema() {
        return TexeraDb.TEXERA_DB;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.UPLOADED_FILE_PRIMARY, Indexes.UPLOADED_FILE_UID);
    }

    @Override
    public Identity<UploadedFileRecord, UInteger> getIdentity() {
        return Keys.IDENTITY_UPLOADED_FILE;
    }

    @Override
    public UniqueKey<UploadedFileRecord> getPrimaryKey() {
        return Keys.KEY_UPLOADED_FILE_PRIMARY;
    }

    @Override
    public List<UniqueKey<UploadedFileRecord>> getKeys() {
        return Arrays.<UniqueKey<UploadedFileRecord>>asList(Keys.KEY_UPLOADED_FILE_UID, Keys.KEY_UPLOADED_FILE_PRIMARY);
    }

    @Override
    public List<ForeignKey<UploadedFileRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<UploadedFileRecord, ?>>asList(Keys.UPLOADED_FILE_IBFK_1);
    }

    public UserAccount userAccount() {
        return new UserAccount(this, Keys.UPLOADED_FILE_IBFK_1);
    }

    @Override
    public UploadedFile as(String alias) {
        return new UploadedFile(DSL.name(alias), this);
    }

    @Override
    public UploadedFile as(Name alias) {
        return new UploadedFile(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public UploadedFile rename(String name) {
        return new UploadedFile(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public UploadedFile rename(Name name) {
        return new UploadedFile(name, null);
    }

    // -------------------------------------------------------------------------
    // Row6 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row6<UInteger, UInteger, UInteger, String, String, String> fieldsRow() {
        return (Row6) super.fieldsRow();
    }
}
